{
  "language": "Solidity",
  "sources": {
    "contracts/the-garden/TheGarden.sol": {
      "content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.9;\npragma abicoder v2;\n\n\ncontract TheGarden {\n  event IpfsHashAdded(string ipfsHash);\n  event IpfsHashApproved(uint256 ipfsHashIndex);\n\n  address public owner;\n  string public approvedIpfsHash;\n  uint256 public ipfsHashCount;\n  mapping(uint256 => string) public ipfsHashes;\n\n  constructor() {\n    owner = msg.sender;\n    approvedIpfsHash = \"\";\n    ipfsHashCount = 0;\n  }\n\n  modifier onlyOwner() {\n    require(msg.sender == owner, \"Only owner can perform this action\");\n    _;\n  }\n\n  function addIpfsHash(string memory _ipfsHash) external {\n    ipfsHashes[ipfsHashCount] = _ipfsHash;\n    ipfsHashCount += 1;\n    emit IpfsHashAdded(_ipfsHash);\n  }\n\n  function approveIpfsHash(uint256 _ipfsHashIndex) public onlyOwner {\n    approvedIpfsHash = ipfsHashes[_ipfsHashIndex];\n    emit IpfsHashApproved(_ipfsHashIndex);\n  }\n\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}